@model IEnumerable<QLVatTuPhongThiNghiem.Models.ViewModels.ThongKeTheoPhongViewModel>
@{
    ViewData["Title"] = "Thống kê thiết bị theo phòng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h3>Thống kê thiết bị theo phòng</h3>
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item">Báo cáo</li>
                        <li class="breadcrumb-item active">Thống kê theo phòng</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Thống kê thiết bị theo phòng máy</h5>
                        <div class="card-header-right">
                            <button class="btn btn-success" onclick="exportToExcel()">
                                <i data-feather="download"></i> Xuất Excel
                            </button>
                            <button class="btn btn-info" onclick="printReport()">
                                <i data-feather="printer"></i> In báo cáo
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row mb-4">
                            <div class="col-md-12">
                                <canvas id="equipmentChart" width="400" height="150"></canvas>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-hover" id="reportTable">
                                <thead>
                                    <tr>
                                        <th>Phòng máy</th>
                                        <th>Tổng thiết bị</th>
                                        <th>Thiết bị tốt</th>
                                        <th>Thiết bị hỏng</th>
                                        <th>Đang sửa chữa</th>
                                        <th>Giá trị TB (VNĐ)</th>
                                        <th>Tỷ lệ tốt (%)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model?.Any() == true)
                                    {
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td><strong>@item.TenPhongMay</strong></td>
                                                <td><span class="badge badge-light-primary">@item.TongThietBi</span></td>
                                                <td><span class="badge badge-light-success">@item.ThietBiTot</span></td>
                                                <td><span class="badge badge-light-danger">@item.ThietBiHong</span></td>
                                                <td><span class="badge badge-light-warning">@item.ThietBiDangSua</span></td>
                                                <td>@String.Format("{0:N0}", item.GiaTriTrungBinh)</td>
                                                <td>
                                                    @{
                                                        var tyLe = item.TongThietBi > 0 ? (double)item.ThietBiTot / item.TongThietBi * 100 : 0;
                                                    }
                                                    <div class="progress">
                                                        <div class="progress-bar @(tyLe >= 80 ? "bg-success" : tyLe >= 60 ? "bg-warning" : "bg-danger")"
                                                             role="progressbar" style="width: @tyLe%">
                                                            @String.Format("{0:N1}%", tyLe)
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="7" class="text-center">Không có dữ liệu</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
<script>
    $(document).ready(function() {
        feather.replace();

        // Create chart
        var ctx = document.getElementById('equipmentChart').getContext('2d');
        var chartData = {
            labels: [@Html.Raw(string.Join(",", Model?.Select(x => $"'{x.TenPhongMay}'") ?? new string[0]))],
            datasets: [
                {
                    label: 'Thiết bị tốt',
                    data: [@Html.Raw(string.Join(",", Model?.Select(x => x.ThietBiTot.ToString()) ?? new string[0]))],
                    backgroundColor: 'rgba(40, 167, 69, 0.8)',
                    borderColor: 'rgba(40, 167, 69, 1)',
                    borderWidth: 1
                },
                {
                    label: 'Thiết bị hỏng',
                    data: [@Html.Raw(string.Join(",", Model?.Select(x => x.ThietBiHong.ToString()) ?? new string[0]))],
                    backgroundColor: 'rgba(220, 53, 69, 0.8)',
                    borderColor: 'rgba(220, 53, 69, 1)',
                    borderWidth: 1
                },
                {
                    label: 'Đang sửa chữa',
                    data: [@Html.Raw(string.Join(",", Model?.Select(x => x.ThietBiDangSua.ToString()) ?? new string[0]))],
                    backgroundColor: 'rgba(255, 193, 7, 0.8)',
                    borderColor: 'rgba(255, 193, 7, 1)',
                    borderWidth: 1
                }
            ]
        };

        var equipmentChart = new Chart(ctx, {
            type: 'bar',
            data: chartData,
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1
                        }
                    }
                },
                plugins: {
                    title: {
                        display: true,
                        text: 'Biểu đồ thống kê thiết bị theo phòng máy'
                    },
                    legend: {
                        display: true,
                        position: 'top'
                    }
                }
            }
        });
    });

    function exportToExcel() {
        // Implement Excel export functionality
        alert('Chức năng xuất Excel đang được phát triển');
    }

    function printReport() {
        window.print();
    }
</script>
